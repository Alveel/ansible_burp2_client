---

- name: ensure cache for apt is updated
  apt:
    update_cache: yes
    cache_valid_time: 43200
  changed_when: false
  when: ansible_os_family == 'Debian'

- name: install build dependencies
  package:
    name: "{{ build_dependencies | join(',') }}"
    state: latest

- name: Uninstall old burp
  package:
    name: "{{ item }}"
    state: absent
  with_items:
    - burp
    - burp-client
    - burp-server
    - burp-core

- name: Ensure download directory is present
  file: path={{ download_dir }} state=directory

- name: GET burp backup and restore
  get_url: url={{ burpurl }} dest={{ download_dir }}/{{ burpsrc }}.tar.gz

- name: Unpack Burp source files
  shell: cd {{ download_dir }} && tar -xzvf {{ burpsrc }}.tar.gz creates={{ download_dir }}/{{ burpsrc }}

- name: Autoreconf Burp source files
  shell: cd {{ download_dir }}/{{ burpsrc }} && autoreconf -vif creates={{ download_dir }}/{{ burpsrc }}/configure

- name: ./configure
  shell: cd {{ download_dir }}/{{ burpsrc }} && ./configure --prefix=/usr --sysconfdir=/etc/burp --localstatedir=/var creates={{ download_dir }}/{{ burpsrc }}/Makefile

- name: Make
  shell: cd {{ download_dir }}/{{ burpsrc }} && make creates={{ download_dir }}/{{ burpsrc }}/burp

- name: Make install
  shell: cd {{ download_dir }}/{{ burpsrc }} && make install creates=/usr/sbin/burp

# Ensure to not create /etc/bur/CA manually because it will break auto generated certificate
- name: create etc directories
  file: path={{ item }} recurse=yes state=directory
  with_items:
    - '/etc/burp/autoupgrade'
    - '{{ burp_client_ca_csr_dir }}'
  
# Only required for server:
# - name: copy etc file
#  template:
#    src: "{{ item.src }}"
#    dest: "{{ item.dest }}"
#  with_items:
#    - { src: "build/CA.cnf.j2", dest: "{{ burp_server_ca_conf }}" }



